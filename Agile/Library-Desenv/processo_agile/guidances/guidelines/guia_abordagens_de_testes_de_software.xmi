<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmi:id="-7-9zejiLZpm0QCoAjgFlTA" name="new_guideline,_k__YkCeLEe-sxbsop-TqYA" guid="-7-9zejiLZpm0QCoAjgFlTA" changeDate="2024-06-10T21:47:27.927-0300">
  <mainDescription>&lt;p>&#xD;
    &lt;strong>&lt;font size=&quot;3&quot;>Abordagens de Testes de Software&lt;/font>&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>1. INTRODUÇÃO&lt;br />&#xD;
    &lt;/strong>Este guia tem por finalidade descrever as abordagens para testes de software, sendo que uma abordagem envolve&#xD;
    a definição de:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Nível de teste (unitário, integração, sistema);&lt;br />&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Tipo de teste (de função, stress, volume, desempenho, usabilidade, distribuição, etc.);&lt;br />&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Método de teste (caixa preta e caixa branca);&lt;br />&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Técnicas de teste usadas (manuais e automatizadas);&lt;br />&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Critérios de avaliação usados (cobertura de teste baseada em código, cobertura de teste baseada&lt;br />&#xD;
        em requisitos, número de defeitos, intervalo entre falhas, etc.).&lt;br />&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    &lt;strong>2. NÍVEIS DE TESTES&lt;/strong>&lt;br />&#xD;
    Normalmente, o teste é aplicado a diferentes objetivos em diferentes estágios ou níveis de esforço de trabalho. Esses&#xD;
    níveis distinguem-se normalmente pelos papéis mais habilitados para projetar e conduzir os testes, e pelas técnicas&#xD;
    mais apropriadas para o teste em cada nível.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>2.1. Testes unitários&lt;/strong>&lt;br />&#xD;
    O esforço de teste unitário concentra-se em avaliar se todas as unidades estão funcionando de forma independente.&#xD;
    Executado pelo Implementador durante o desenvolvimento da unidade, ele se concentra na verificação dos menores&#xD;
    elementos testáveis do software. O teste unitário normalmente é aplicado para verificar se os fluxos de controle e de&#xD;
    dados estão cobertos e funcionam conforme o esperado. Essas expectativas baseiam-se em como o componente participa da&#xD;
    execução de um requisito.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>2.2. Testes de integração&lt;/strong>&lt;br />&#xD;
    O teste de integração é executado para garantir que os componentes de software funcionem corretamente quando&#xD;
    combinados. O objetivo do teste de integração é detectar imperfeições ou erros nas especificações das interfaces dos&#xD;
    componentes integrados.&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A técnica de teste de integração Big Bang consiste em combinar todas as unidades que compõem o sistema e depois&#xD;
        efetuar os testes. Não deve ser usado para sistemas complexos, pois nesse caso, dificulta o diagnóstico e correção&#xD;
        de falhas encontradas.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A técnica de teste de integração Incremental consiste em testar partes do sistema e depois integrá- las umas às&#xD;
        outras até que o sistema seja todo construído. Pode ser top-down, ou bottom-up, ou mista e deve ser baseada no grau&#xD;
        de acoplamento e coesão dos componentes sendo integrados. &#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                Na estratégia top-down inicia-se a integração a partir dos níveis mais altos da hierarquia de controle,&#xD;
                sendo necessária à utilização de stubs para substituir os componentes ainda não integrados.&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Na estratégia bottom-up inicia-se a integração pelos componentes de níveis mais baixos, seguindo em direção&#xD;
                aos de níveis mais altos da hierarquia de controle, sendo necessária à utilização de drivers para&#xD;
                substituir os componentes ainda não integrados.&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Na estratégia mista, deve ser utilizada top-down para os níveis mais altos e bottom-up para os níveis mais&#xD;
                baixos.&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    A escolha de determinada técnica de testes de integração é baseada no planejamento de integração do projeto.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>2.2.1. Componentes de teste de integração&lt;br />&#xD;
    &lt;/strong>De acordo com a estratégia de integração, testes são necessários sem que se tenham disponíveis todos os&#xD;
    componentes de software que compõem o produto integrado. Nestes casos são criados Componentes de Teste de Integração&#xD;
    (Drivers e Stubs) que simulam o funcionamento e a interface do produto de software sendo testado.&lt;br />&#xD;
    &lt;br />&#xD;
    As seguintes situações motivam a criação de Drivers e Stubs:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        O componente encontra-se em desenvolvimento ou ainda não foi implementado;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        O componente possui defeitos que impeçam o funcionamento dos testes ou que fazem o testador perder muito tempo&#xD;
        descobrindo que uma falha de teste não foi causada pelo componente;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        O componente pode dificultar a execução dos testes. Caso o componente insira restrições ao teste como janela de&#xD;
        tempo de execução, autenticação de usuário, etc.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        O componente torna o teste muito lento, de maneira que os testes não sejam executados com freqüência suficiente.&#xD;
        Por exemplo, a inicialização do banco de dados pode levar cinco minutos por teste.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Situações excepcionais devem ser provocadas nos componentes para produzir certos resultados. Por exemplo, o teste&#xD;
        de um tratamento de erros de comunicação da rede, ou falta de espaço em disco.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Os drivers e stubs são necessários somente durante os testes de integração, sendo substituídos pelos componentes de&#xD;
    software “reais” à medida que estes sejam desenvolvidos.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;img style=&quot;HEIGHT: 264px; WIDTH: 462px&quot; alt=&quot;Testes de integração com drivers e stubs&quot;&#xD;
    src=&quot;resources/testes de integracao com drivers e stubs.png&quot; width=&quot;600&quot; height=&quot;600&quot; />&#xD;
&lt;/p>&#xD;
&lt;br />&#xD;
&lt;p>&#xD;
    &lt;strong>2.2.1.1. Drivers&lt;br />&#xD;
    &lt;/strong>Drivers são componentes de software usados para disparar um teste e, muitas vezes, fornecer dados de teste,&#xD;
    controlar e monitorar execução e relatar resultados de teste. O driver de teste sequencia e controla a execução de um&#xD;
    ou mais testes, passando informações para o produto ou componente de software sendo alvo do teste.&lt;br />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>2.2.1.2.&amp;nbsp;Stubs&lt;br />&#xD;
    &lt;/strong>Geralmente, os componentes de software dependem de outros componentes para concluir suas tarefas. Os problemas&#xD;
    surgem quando esses componentes secundários não são operacionais. Às vezes, ainda estão em desenvolvimento, ou então&#xD;
    têm muitos erros. De qualquer modo, o teste dos componentes principais não precisa ser interrompido até que os&#xD;
    componentes secundários estejam disponíveis. Em vez disso, um stub ou componente temporário pode substituir qualquer&#xD;
    componente não operacional para fins de teste. O stub não implementa a funcionalidade do componente real, ele&#xD;
    simplesmente reage a entradas. Os stubs retornam uma resposta programada para um determinado conjunto de valores, sem&#xD;
    implementar qualquer lógica. É um simples relacionamento de estímulo/resposta.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>2.3. Testes de sistema&lt;br />&#xD;
    &lt;/strong>O teste de sistema consiste em testar o sistema como um todo, totalmente integrado.&lt;br />&#xD;
    &lt;br />&#xD;
    O objetivo é assegurar que o produto de software e demais elementos que compõe o sistema, tais como, hardware e banco&#xD;
    de dados, combinam-se adequadamente em relação à funcionalidade e desempenho desejados.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>2.4. Testes de&amp;nbsp;aceitação&lt;br />&#xD;
    &lt;/strong>O teste de aceitação envolve a participação dos usuários finais nos testes com foco nas funcionalidades do&#xD;
    sistema e em sua usabilidade.&lt;br />&#xD;
    &lt;br />&#xD;
    O teste de aceitação do produto é o teste final antes da implantação do software. O objetivo desse teste é verificar se&#xD;
    o software está pronto e pode ser usado pelos usuários finais para executar as funções e as tarefas para as quais o&#xD;
    software foi criado.&lt;br />&#xD;
    &lt;br />&#xD;
    Esse teste geralmente envolve mais do que a verificação da integridade do software. Também envolve todos os artefatos&#xD;
    de produto fornecidos ao(s) cliente(s), como treinamento, documentação e pacotes.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>3.&amp;nbsp;TIPOS DE TESTES&lt;br />&#xD;
    &lt;/strong>A qualidade do produto de software é percebida em função de 5 dimensões, conhecidas como modelo&#xD;
    &lt;strong>FURPS+:&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Funcionalidade&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Usabilidade&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Confiabilidade&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Desempenho&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Suportabilidade&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    A avaliação da qualidade do produto de software é realizada através de diversos tipos de teste, todos eles relacionados&#xD;
    a alguma dimensão da qualidade.&#xD;
&lt;/p>&#xD;
&lt;br />&#xD;
&lt;br />&#xD;
&lt;table title=&quot;&quot; cellspacing=&quot;0&quot; cellpadding=&quot;2&quot; width=&quot;85%&quot; border=&quot;1&quot;>&#xD;
    &lt;tbody>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;col&quot; abbr=&quot;&quot;>&#xD;
                Dimensão de&lt;br />&#xD;
                Qualidade&#xD;
            &lt;/th>&#xD;
            &lt;th scope=&quot;col&quot; abbr=&quot;&quot;>&#xD;
                Tipo de&lt;br />&#xD;
                Teste&#xD;
            &lt;/th>&#xD;
            &lt;th scope=&quot;col&quot; abbr=&quot;&quot;>&#xD;
                Descrição&#xD;
            &lt;/th>&#xD;
            &lt;th scope=&quot;col&quot; abbr=&quot;&quot;>&#xD;
                Ocorrência (Níveis&lt;br />&#xD;
                de Teste)&#xD;
            &lt;/th>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                Funcionalidade&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                Teste de&lt;br />&#xD;
                função&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                Testes destinados a validar as funções do produto&lt;br />&#xD;
                ou componente de software conforme as&lt;br />&#xD;
                especificações de requisitos funcionais.&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;div style=&quot;MARGIN-LEFT: 2em; MARGIN-RIGHT: 0px&quot; dir=&quot;ltr&quot;>&#xD;
                    &lt;ul>&#xD;
                        &lt;li>&#xD;
                            Unitário;&#xD;
                        &lt;/li>&#xD;
                        &lt;li>&#xD;
                            Integração;&#xD;
                        &lt;/li>&#xD;
                        &lt;li>&#xD;
                            Sistema;&#xD;
                        &lt;/li>&#xD;
                        &lt;li>&#xD;
                            Aceitação.&#xD;
                        &lt;/li>&#xD;
                    &lt;/ul>&#xD;
                &lt;/div>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                Funcionalidade&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                Teste de&lt;br />&#xD;
                segurança&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                Testes destinados a garantir que o produto ou&lt;br />&#xD;
                componente de software possa ser acessado&lt;br />&#xD;
                apenas por determinados perfis de usuários ou&lt;br />&#xD;
                atores. Esse teste é implementado e executado&lt;br />&#xD;
                principalmente nos componentes de segurança do&lt;br />&#xD;
                software, como os que realizam login do usuário.&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;ul>&#xD;
                    &lt;li>&#xD;
                        Unitário: no teste&lt;br />&#xD;
                        específico do&lt;br />&#xD;
                        componente de&lt;br />&#xD;
                        segurança.&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Sistema: avaliando&lt;br />&#xD;
                        as regras gerais de&lt;br />&#xD;
                        acesso.&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Aceitação.&#xD;
                    &lt;/li>&#xD;
                &lt;/ul>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                Funcionalidade&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                Teste de&lt;br />&#xD;
                volume&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                Teste destinado a verificar a capacidade do produto&lt;br />&#xD;
                ou componente de software em lidar com um&lt;br />&#xD;
                grande volume de dados, como entrada e saída ou&lt;br />&#xD;
                residente no banco de dados. O teste de volume&lt;br />&#xD;
                abrange estratégias de teste, como, por exemplo, a&lt;br />&#xD;
                entrada de dados do volume máximo de dados em&lt;br />&#xD;
                cada campo ou a criação de consultas que&lt;br />&#xD;
                retornem todo o conteúdo do banco de dados ou&lt;br />&#xD;
                que tenham tantas restrições que nenhum dado&lt;br />&#xD;
                seja retornado.&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;ul>&#xD;
                    &lt;li>&#xD;
                        Unitário: no teste&lt;br />&#xD;
                        específico do&lt;br />&#xD;
                        componente de&lt;br />&#xD;
                        acesso aos dados.&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Sistema: avaliando&lt;br />&#xD;
                        os requisitos gerais&lt;br />&#xD;
                        de volume.&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Aceitação.&#xD;
                    &lt;/li>&#xD;
                &lt;/ul>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                Usabilidade&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                Teste de&lt;br />&#xD;
                usabilidade&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;p>&#xD;
                    Testes que enfatizam:&#xD;
                &lt;/p>&#xD;
                &lt;ul>&#xD;
                    &lt;li>&#xD;
                        fatores humanos,&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        estética,&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        consistência na interface do usuário,&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        ajuda on-line e contextual,&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        assistentes e agentes,&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        documentação do usuário e material de&lt;br />&#xD;
                        treinamento.&#xD;
                    &lt;/li>&#xD;
                &lt;/ul>&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;ul>&#xD;
                    &lt;li>&#xD;
                        Unitário: enquanto&lt;br />&#xD;
                        prova de conceito&lt;br />&#xD;
                        para avaliação dos&lt;br />&#xD;
                        requisitos de interface&lt;br />&#xD;
                        do software.&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Sistema: através&lt;br />&#xD;
                        da avaliação geral&lt;br />&#xD;
                        dos padrões de&lt;br />&#xD;
                        interface&lt;br />&#xD;
                        especificados.&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Aceitação.&#xD;
                    &lt;/li>&#xD;
                &lt;/ul>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                Confiabilidade&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                Teste de&lt;br />&#xD;
                integridade&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                Testes destinados a avaliar a robustez do produto&lt;br />&#xD;
                ou componente de software (resistência a falhas) e&lt;br />&#xD;
                a compatibilidade técnica em relação à linguagem,&lt;br />&#xD;
                sintaxe e utilização de recursos.&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;ul>&#xD;
                    &lt;li>&#xD;
                        Unitário: enquanto&lt;br />&#xD;
                        prova de conceito&lt;br />&#xD;
                        arquitetural.&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Integração.&#xD;
                    &lt;/li>&#xD;
                &lt;/ul>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                Confiabilidade&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                Teste de&lt;br />&#xD;
                estrutura&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                Testes destinados a avaliar a adequação do&lt;br />&#xD;
                produto ou componente de software em relação a&lt;br />&#xD;
                seu design e sua formação. Em geral, esse teste é&lt;br />&#xD;
                realizado em aplicativos habilitados para a Web,&lt;br />&#xD;
                garantindo que todos os links estejam conectados,&lt;br />&#xD;
                que o conteúdo apropriado seja exibido e que não&lt;br />&#xD;
                haja conteúdo órfão.&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;ul>&#xD;
                    &lt;li>&#xD;
                        Sistema;&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Aceitação.&#xD;
                    &lt;/li>&#xD;
                &lt;/ul>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                Confiabilidade&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                Teste de&lt;br />&#xD;
                stress&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                Tipo de teste de confiabilidade destinado a avaliar&lt;br />&#xD;
                como o sistema responde em condições anormais.&lt;br />&#xD;
                &lt;br />&#xD;
                O stress no sistema pode abranger cargas de&lt;br />&#xD;
                trabalho extremas, memória insuficiente, hardware&lt;br />&#xD;
                e serviços indisponíveis ou recursos compartilhados&lt;br />&#xD;
                limitados.&lt;br />&#xD;
                &lt;br />&#xD;
                Deve ser planejado para que a carga seja&lt;br />&#xD;
                constantemente aumentada até que o desempenho&lt;br />&#xD;
                do sistema se torne inaceitável.&lt;br />&#xD;
                &lt;br />&#xD;
                Normalmente, esses testes são executados para&lt;br />&#xD;
                compreender melhor como e em quais áreas o&lt;br />&#xD;
                sistema será dividido, para que os planos de&lt;br />&#xD;
                contingência e a manutenção de atualização&lt;br />&#xD;
                possam ser planejados e orçados com bastante&lt;br />&#xD;
                antecedência.&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;ul>&#xD;
                    &lt;li>&#xD;
                        Sistema.&#xD;
                    &lt;/li>&#xD;
                &lt;/ul>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                Desempenho&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                Teste de&lt;br />&#xD;
                avaliação de&lt;br />&#xD;
                desempenho&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                Tipo de teste de desempenho que compara o&lt;br />&#xD;
                desempenho do produto ou componente de&lt;br />&#xD;
                software (novo ou desconhecido) a um sistema e&lt;br />&#xD;
                uma carga de trabalho de referência conhecidos.&lt;br />&#xD;
                &lt;br />&#xD;
                Requer instrumentação do sistema para monitorar o&lt;br />&#xD;
                uso dos recursos, tempos de resposta para&lt;br />&#xD;
                determinar as situações que levam à degradação&lt;br />&#xD;
                do desempenho.&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;ul>&#xD;
                    &lt;li>&#xD;
                        Unitário: quando&lt;br />&#xD;
                        prova de conceito&lt;br />&#xD;
                        para avaliação de&lt;br />&#xD;
                        desempenho.&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Sistema&lt;br />&#xD;
                        abrangendo o&lt;br />&#xD;
                        desempenho geral do&lt;br />&#xD;
                        software.&#xD;
                    &lt;/li>&#xD;
                &lt;/ul>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                Desempenho&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                Teste de&lt;br />&#xD;
                carga&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                Tipo de teste de desempenho usado para validar e&lt;br />&#xD;
                avaliar a aceitabilidade dos limites operacionais de&lt;br />&#xD;
                um sistema de acordo com cargas de trabalho&lt;br />&#xD;
                variáveis, enquanto o sistema em teste permanece&lt;br />&#xD;
                constante. Em algumas variáveis, a carga de&lt;br />&#xD;
                trabalho permanece constante e a configuração do&lt;br />&#xD;
                sistema em teste é que varia.&lt;br />&#xD;
                &lt;br />&#xD;
                Geralmente, as medições são tomadas com base&lt;br />&#xD;
                na taxa de transferência de dados da carga de&lt;br />&#xD;
                trabalho e no tempo de resposta da transação&lt;br />&#xD;
                alinhado. As variações na carga de trabalho&lt;br />&#xD;
                normalmente incluem a emulação das cargas de&lt;br />&#xD;
                trabalho médias e máximas que ocorrem dentro de&lt;br />&#xD;
                tolerâncias operacionais normais.&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;ul>&#xD;
                    &lt;li>&#xD;
                        Unitário, quando&lt;br />&#xD;
                        prova de conceito&lt;br />&#xD;
                        para avaliação de&lt;br />&#xD;
                        desempenho.&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Sistema.&#xD;
                    &lt;/li>&#xD;
                &lt;/ul>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                Suportabilidade&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                Teste de&lt;br />&#xD;
                configuração&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                Teste destinado a garantir que o produto ou&lt;br />&#xD;
                componente de software funcione conforme o&lt;br />&#xD;
                esperado em diferentes configurações de hardware&lt;br />&#xD;
                e/ou software.&lt;br />&#xD;
                &lt;br />&#xD;
                Normalmente utilizado quando requisitos não&lt;br />&#xD;
                funcionais de portabilidade fazem parte do sistema,&lt;br />&#xD;
                como a necessidade visualizar a interface Web em&lt;br />&#xD;
                diferentes fabricantes e versões de navegadores.&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;ul>&#xD;
                    &lt;li>&#xD;
                        Unitário: quando&lt;br />&#xD;
                        prova de conceito de&lt;br />&#xD;
                        portabilidade.&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Sistema.&#xD;
                    &lt;/li>&#xD;
                &lt;/ul>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                Suportabilidade&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                Teste de&lt;br />&#xD;
                instalação&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                Teste destinado a garantir que o produto ou&lt;br />&#xD;
                componente de software do teste seja instalado&lt;br />&#xD;
                conforme o esperado em diferentes configurações&lt;br />&#xD;
                de hardware e/ou software e sob diferentes&lt;br />&#xD;
                condições (como no caso de espaço insuficiente em&lt;br />&#xD;
                disco ou interrupção de energia). Esse teste é&lt;br />&#xD;
                implementado e executado em aplicativos e&lt;br />&#xD;
                sistemas.&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;ul>&#xD;
                    &lt;li>&#xD;
                        Sistema&#xD;
                    &lt;/li>&#xD;
                &lt;/ul>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/tbody>&#xD;
&lt;/table>&#xD;
&lt;br />&#xD;
&lt;br />&#xD;
&lt;p>&#xD;
    &lt;br />&#xD;
    &lt;strong>4.&amp;nbsp;MÉTODOS DE TESTES&lt;br />&#xD;
    &lt;/strong>Os métodos de testes são definidos de acordo com o tipo de testes a ser aplicado.&lt;br />&#xD;
    &lt;br />&#xD;
    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br />&#xD;
&lt;/p>&#xD;
&lt;table title=&quot;&quot; cellspacing=&quot;0&quot; cellpadding=&quot;2&quot; width=&quot;85%&quot; border=&quot;1&quot;>&#xD;
    &lt;tbody>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;col&quot; abbr=&quot;&quot;>&#xD;
                Método de Teste&#xD;
            &lt;/th>&#xD;
            &lt;th scope=&quot;col&quot; abbr=&quot;&quot;>&#xD;
                Base para os Testes&#xD;
            &lt;/th>&#xD;
            &lt;th scope=&quot;col&quot; abbr=&quot;&quot;>&#xD;
                Descrição&#xD;
            &lt;/th>&#xD;
            &lt;th scope=&quot;col&quot; abbr=&quot;&quot;>&#xD;
                Tipos de Testes&#xD;
            &lt;/th>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                Caixa&lt;br />&#xD;
                Branca&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                Código Fonte&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                Teste baseado na implementação do&lt;br />&#xD;
                produto ou componente de software tem&lt;br />&#xD;
                a base na informação obtida a partir do&lt;br />&#xD;
                código. É chamado de teste de caixa&lt;br />&#xD;
                branca, caixa de vidro ou estrutural.&lt;br />&#xD;
                Pode ser usado para busca de falhas na&lt;br />&#xD;
                estrutura do programa, e é focado em&lt;br />&#xD;
                &lt;strong>como&lt;/strong> o sistema opera.&lt;br />&#xD;
                &lt;br />&#xD;
                Teoricamente, cada caminho possível ao&lt;br />&#xD;
                longo do código deve ser testado, mas&lt;br />&#xD;
                isso só pode ser feito em unidades muito&lt;br />&#xD;
                simples.&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;ul>&#xD;
                    &lt;li>&#xD;
                        Teste de segurança: quando&lt;br />&#xD;
                        necessário garantir que instruções do&lt;br />&#xD;
                        código não firam a segurança do&lt;br />&#xD;
                        sistema, como por exemplo: chaves e&lt;br />&#xD;
                        senhas visíveis no código, instruções&lt;br />&#xD;
                        que realizem transferências&lt;br />&#xD;
                        financeiras desautorizadas ou que&lt;br />&#xD;
                        desviem informações sigilosas do&lt;br />&#xD;
                        usuário.&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Teste de integridade: Avaliação do&lt;br />&#xD;
                        código quanto a ausência de pontos&lt;br />&#xD;
                        de falha e adequação aos padrões de&lt;br />&#xD;
                        implementação da linguagem.&#xD;
                    &lt;/li>&#xD;
                &lt;/ul>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                Caixa&lt;br />&#xD;
                Preta&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                Especificações&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                O método de teste baseado na&lt;br />&#xD;
                especificação determina se todos os&lt;br />&#xD;
                requisitos são atendidos. É chamado de&lt;br />&#xD;
                caixa preta ou comportamental. Pode&lt;br />&#xD;
                ser baseado nas especificações de&lt;br />&#xD;
                requisitos, de projeto, ou em uma&lt;br />&#xD;
                descrição informal do que o software&lt;br />&#xD;
                deve fazer. É focado em &lt;strong>o que&lt;/strong> o&lt;br />&#xD;
                sistema deve fazer.&lt;br />&#xD;
                &lt;br />&#xD;
                É realizado sem o conhecimento de&lt;br />&#xD;
                como o produto ou componente de&lt;br />&#xD;
                software é implementado.&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;ul>&#xD;
                    &lt;li>&#xD;
                        Teste de função&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Teste de segurança&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Teste de volume&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Teste de usabilidade&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Teste de estrutura&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Teste de stress&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Teste de avaliação de&lt;br />&#xD;
                        desempenho&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Teste de carga&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Teste de configuração&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Teste de instalação&#xD;
                    &lt;/li>&#xD;
                &lt;/ul>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/tbody>&#xD;
&lt;/table>&#xD;
&lt;p>&#xD;
    &lt;br />&#xD;
    &amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>5.&amp;nbsp;TÉCNICA DE TESTES&lt;br />&#xD;
    &lt;/strong>As técnicas de testes definem como testar o produto ou o componente de software em relação ao método de teste.&#xD;
    As técnicas podem ser combinadas simultaneamente para testes de um determinado produto ou componente de software.&#xD;
&lt;/p>&#xD;
&lt;br />&#xD;
&lt;br />&#xD;
&lt;table title=&quot;&quot; cellspacing=&quot;0&quot; cellpadding=&quot;2&quot; width=&quot;85%&quot; border=&quot;1&quot;>&#xD;
    &lt;tbody>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;col&quot; abbr=&quot;&quot;>&#xD;
                Método&#xD;
            &lt;/th>&#xD;
            &lt;th scope=&quot;col&quot; abbr=&quot;&quot;>&#xD;
                Técnica de Teste&#xD;
            &lt;/th>&#xD;
            &lt;th scope=&quot;col&quot; abbr=&quot;&quot;>&#xD;
                Descrição&#xD;
            &lt;/th>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                Caixa&lt;br />&#xD;
                Preta&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                Particionamento&lt;br />&#xD;
                de Equivalência&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;p>&#xD;
                    Esta técnica consiste em dividir o domínio de entrada do produto ou&lt;br />&#xD;
                    componente de software em classes de equivalência, minimizando o número&lt;br />&#xD;
                    de casos de teste. Uma classe de equivalência representa um conjunto de&lt;br />&#xD;
                    valores válidos e inválidos como condições de entrada para o produto de&lt;br />&#xD;
                    software que está sendo avaliado. Tipicamente, uma condição de entrada é&lt;br />&#xD;
                    um valor numérico específico, uma faixa de valores, um conjunto de valores&lt;br />&#xD;
                    relacionados ou um valor lógico.&lt;br />&#xD;
                    &lt;br />&#xD;
                    As classes de equivalência podem ser definidas de acordo com as seguintes&lt;br />&#xD;
                    condições de entrada:&#xD;
                &lt;/p>&#xD;
                &lt;ul>&#xD;
                    &lt;li>&#xD;
                        para um valor específico, são determinadas uma classe válida e&lt;br />&#xD;
                        duas inválidas;&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        para uma condição expressa por uma faixa de valores, tem-se uma&lt;br />&#xD;
                        classe válida e duas inválidas;&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        para um membro de um conjunto de valores, uma classe válida e&lt;br />&#xD;
                        uma inválida; e,&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        para um valor lógico, serão definidas uma classe válida e uma&lt;br />&#xD;
                        inválida.&#xD;
                    &lt;/li>&#xD;
                &lt;/ul>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                Caixa&lt;br />&#xD;
                Preta&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                Análise de valor&lt;br />&#xD;
                limite&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;p>&#xD;
                    Técnica que assume que um número maior de erros tende a ocorrer mais&lt;br />&#xD;
                    nas fronteiras do domínio de entrada que nos valores centrais esperados.&lt;br />&#xD;
                    &lt;br />&#xD;
                    Este método é um complemento do particionamento de equivalência e tem&lt;br />&#xD;
                    como objetivo verificar se a aplicação trabalha corretamente quando&lt;br />&#xD;
                    exercitado os limites de seus valores de entrada.&lt;br />&#xD;
                    &lt;br />&#xD;
                    Identificar os domínios de entrada, derivar casos de teste com valores que&lt;br />&#xD;
                    estejam nos limites de cada domínio segundo algumas regras:&#xD;
                &lt;/p>&#xD;
                &lt;ul>&#xD;
                    &lt;li>&#xD;
                        se uma condição de entrada especifica uma faixa delimitada pelos&lt;br />&#xD;
                        valores &lt;em>a&lt;/em> e &lt;em>b&lt;/em> os casos de teste devem ser projetados para trabalhar&lt;br />&#xD;
                        com os valores logo abaixo (&lt;em>a&lt;/em> -- e &lt;em>b&lt;/em> --) e acima (&lt;em>a&lt;/em> ++ e &lt;em>b&lt;/em> ++)&#xD;
                        de a e&lt;br />&#xD;
                        b, além dos próprios valores (&lt;em>a&lt;/em> e &lt;em>b&lt;/em>);&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        se uma condição de entrada especifica um número de valores, os&lt;br />&#xD;
                        casos de teste devem ser projetados para exercitar os números&lt;br />&#xD;
                        máximos e mínimos bem como os valores logo acima e abaixo&lt;br />&#xD;
                        destes;&#xD;
                    &lt;/li>&#xD;
                &lt;/ul>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                Caixa&lt;br />&#xD;
                Preta&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                Árvores de&lt;br />&#xD;
                Decisão&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                Combinação de condições e ações.&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                Caixa&lt;br />&#xD;
                Preta&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                Baseados em&lt;br />&#xD;
                estados&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                Consiste na verificação de estados e o modelo de sistema. Realizadoatravés de máquina de estados finita.&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                Caixa&lt;br />&#xD;
                Branca&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                Fluxo de controle&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                Os casos de teste são desenhados para executar os caminhos e pontos de&lt;br />&#xD;
                decisão dentro de uma unidade de forma a cobrir as instruções, condições e&lt;br />&#xD;
                ciclos (&lt;em>loopings&lt;/em>).&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                Caixa&lt;br />&#xD;
                Branca&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                Fluxo de dados&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                Cobertura de definições e uso de variáveis a fim de identificar situações&lt;br />&#xD;
                onde dados são usados sem que tenham sido definidos.&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                Caixa&lt;br />&#xD;
                Branca&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                Análise de&lt;br />&#xD;
                mutantes&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                Consiste em definir um conjunto de operadores de mutação e aplicar no&lt;br />&#xD;
                produto ou componente de software em teste, gerando versões modificadas&lt;br />&#xD;
                do produto (mutantes) para a detecção de erros que podem ser cometidos&lt;br />&#xD;
                ao longo do desenvolvimento.&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/tbody>&#xD;
&lt;/table>&#xD;
&lt;p>&#xD;
    &lt;br />&#xD;
    Complementarmente às técnicas definidas para cada abordagem de testes, é importante descrever como o teste será&#xD;
    realizado aplicado às características específicas do produto ou componente de software a ser testado. Neste sentido&#xD;
    deve-se considerar:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;strong>Testes manuais&lt;/strong>: Realizados quando uma pessoa executa, de forma manual, um caso de teste sobre o&#xD;
        produto ou componente de software. Embora testes manuais possam ser aplicados à qualquer nível, tipo, método ou&#xD;
        técnica de testes, normalmente são utilizados para testes funcionais e não se aplicam à testes de desempenho devido&#xD;
        à dificuldade de se obter resultados de teste precisos quando executados manualmente.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Testes automatizados&lt;/strong>: Testes executados automaticamente, por meio de recurso computacional,&#xD;
        através de scripts e condições pré-estabelecidas. A automatização de testes permite a repetição eficiente dos&#xD;
        testes tornando-os ideais para testes de desempenho ou quando testes de regressão são planejados para produtos ou&#xD;
        componentes de software.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Testes de regressão&lt;/strong>: Consiste na re-execução dos casos de testes já aplicados para determinar se&#xD;
        as alterações não produziram nenhum efeito indesejado. Deve ser utilizado todas as vezes que alguma alteração é&#xD;
        feita no sistema. Testes de regressão podem ser realizados para todo o nível, tipo, método e técnica de teste,&#xD;
        sendo geralmente, porém não obrigatoriamente, apoiado por ferramentas de automatização de testes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    &lt;strong>6.&amp;nbsp;CRITÉRIOS DE CONCLUSÃO DOS TESTES&lt;br />&#xD;
    &lt;/strong>Os critérios de conclusão dos testes determinam quando os testes realizados em determinada abordagem são&#xD;
    considerados concluídos.&lt;br />&#xD;
    &lt;br />&#xD;
    As principais medidas de um teste incluem a cobertura e a qualidade.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;br />&#xD;
    &lt;strong>6.1.&amp;nbsp;Medida da cobertura dos testes&lt;br />&#xD;
    &lt;/strong>A cobertura é a medida da abrangência do teste e é expressa pela cobertura dos requisitos e casos de teste ou&#xD;
    pela cobertura do código executado.&lt;br />&#xD;
    &lt;br />&#xD;
    As métricas de cobertura fornecem respostas à pergunta &quot;Qual é a abrangência do teste?&quot;. As medidas de cobertura usadas&#xD;
    com mais frequência são a cobertura de teste baseada em requisitos e em códigos. Em resumo, a cobertura de teste é&#xD;
    qualquer medida de abrangência relacionada a um requisito (baseada em requisitos) ou a um critério de&#xD;
    design/implementação do código (baseada em códigos), como a verificação de casos de uso (baseada em requisitos) ou a&#xD;
    execução de todas as linhas de código (baseada em códigos).&lt;br />&#xD;
    &lt;br />&#xD;
    Qualquer atividade sistemática de teste baseia-se em, pelo menos, uma estratégia de cobertura. Essa estratégia orienta&#xD;
    o design de casos de teste declarando a finalidade geral do teste. A declaração da estratégia de cobertura pode ser tão&#xD;
    simples quanto verificar todo o desempenho.&lt;br />&#xD;
    &lt;br />&#xD;
    Se os requisitos estiverem completamente catalogados, uma estratégia de cobertura baseada em requisitos poderá ser&#xD;
    suficiente para produzir uma medida quantificável para testar a abrangência. Por exemplo, se todos os requisitos do&#xD;
    teste de desempenho foram identificados, é possível fazer referência aos resultados do teste para obter medidas, como&#xD;
    75% dos requisitos do teste de desempenho foram verificados.&lt;br />&#xD;
    &lt;br />&#xD;
    Se a cobertura baseada em códigos for aplicada, as estratégias de teste serão formuladas em termos da quantidade do&#xD;
    código-fonte que foi executada pelos testes. Esse tipo de estratégia de cobertura de teste é muito importante para&#xD;
    sistemas de segurança crítica.&lt;br />&#xD;
    &lt;br />&#xD;
    Ambas as medidas podem ser obtidas manualmente ou podem ser calculadas por ferramentas de automatização de testes.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>6.2.&amp;nbsp;Medida de qualidade dos testes&lt;br />&#xD;
    &lt;/strong>A qualidade é uma medida de confiabilidade, de estabilidade e de desempenho do objetivo do teste (sistema ou&#xD;
    aplicativo em teste). Ela se baseia na avaliação dos resultados do teste e na análise das solicitações de mudança&#xD;
    (defeitos) identificadas durante o teste.&lt;br />&#xD;
    &lt;br />&#xD;
    Enquanto a avaliação da cobertura fornece a medida para testar a conclusão, uma avaliação dos defeitos encontrados&#xD;
    durante os testes fornece a melhor indicação da qualidade do software. Qualidade é a indicação do grau em que o&#xD;
    software satisfaz aos requisitos. Assim, nesse contexto, os defeitos são identificados como um tipo de solicitação de&#xD;
    mudança na qual o objetivo do teste não satisfez aos requisitos.&lt;br />&#xD;
    &lt;br />&#xD;
    A análise de defeitos significa examinar a distribuição de defeitos nos valores de um ou mais parâmetros associados a&#xD;
    um defeito. Essa análise fornece uma indicação da confiabilidade do software.&lt;br />&#xD;
    &lt;br />&#xD;
    Na análise de defeitos, existem quatro parâmetros principais que são geralmente usados:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Situação - o estado atual do defeito (em aberto, em reparo, concluído, etc.).&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Prioridade - a importância relativa do defeito a ser relatado e solucionado.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Gravidade - o impacto relativo do defeito. O impacto para o usuário final, uma organização, terceiros&lt;br />&#xD;
        etc.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Origem - onde está e qual é a falha original que está causando o defeito ou o componente que será&lt;br />&#xD;
        corrigido para eliminá-lo.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Por exemplo, espera-se que as taxas de detecção de defeitos diminuam à medida que os testes e as correções avançam. É&#xD;
    possível estabelecer um limite até onde o software será implantado.&lt;br />&#xD;
    &lt;br />&#xD;
    &amp;nbsp;&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
